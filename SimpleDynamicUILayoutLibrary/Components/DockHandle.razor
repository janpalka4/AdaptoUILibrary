@inject IElementMeasurementService measurementService
@inject DragTemp dragTemp

<div class="sdui-dock-handle" @onmousedown="OnMouseDown" @onmouseup="OnMouseUp"></div>

@code {
    [Parameter]
    public DockLayout Parent { get; set; }
    [Parameter]
    public EventCallback<double> OnWeightSet { get; set; }

    private bool dragged { get; set; }
    private double measure { get; set; }

    private async void OnMouseDown(MouseEventArgs e)
    {
        dragged = true;
        measure = Parent.Model.DockType == DockLayoutType.HORIZONTAL ? await measurementService.GetElementWidth(Parent.Container) : await measurementService.GetElementHeight(Parent.Container);

        dragTemp.SetIsWeightBeingResized(true);
    }

    public void OnMouseUp(MouseEventArgs e)
    {
        dragged = false;
        dragTemp.SetIsWeightBeingResized(false);
    }

    public async void OnMouseMove(MouseEventArgs e)
    {
        if (!dragged)
            return;

            if(OnWeightSet.HasDelegate)
                await OnWeightSet.InvokeAsync(((Parent.Model.DockType == DockLayoutType.HORIZONTAL ? e.ClientX : e.ClientY) / measure));
    }
}
